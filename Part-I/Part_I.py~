from PIL import Image
from PIL.ExifTags import TAGS, GPSTAGS
import os,sys
from math import cos, asin, sqrt
import pandas as pd




def distance(lat1, lon1, lat2, lon2):
    p = 0.017453292519943295     #Pi/180
    a = 0.5 - cos((lat2 - lat1) * p)/2 + cos(lat1 * p) * cos(lat2 * p) * (1 - cos((lon2 - lon1) * p)) / 2
    return 12742 * asin(sqrt(a))*1000   #2*R*asin..



def _convert_to_degress(value):
    deg_num, deg_denom = value[0]
    d = float(deg_num) / float(deg_denom)

    min_num, min_denom = value[1]
    m = float(min_num) / float(min_denom)

    sec_num, sec_denom = value[2]
    s = float(sec_num) / float(sec_denom)

    return d + (m / 60.0) + (s / 3600.0)


def get_exif_data(image):
    """Returns a dictionary from the exif data of an PIL Image item. Also converts the GPS Tags"""
    exif_data = {}
    info = image._getexif()
    if info:
        for tag, value in info.items():
            decoded = TAGS.get(tag, tag)
            if decoded == "GPSInfo":
                gps_data = {}
                for gps_tag in value:
                    sub_decoded = GPSTAGS.get(gps_tag, gps_tag)
                    gps_data[sub_decoded] = value[gps_tag]

                exif_data[decoded] = gps_data
            else:
                exif_data[decoded] = value

    return exif_data



data = {'Time':[],'Image':[]}



with open("/home/shameer/Desktop/Skylarks/software_dev/videos/DJI_0301.SRT", "r+") as ins:
    array = []
    i=0
    for line in ins:
        array.append(line)

for i in range(0,len(array),4):
    time=array[i+1]
    loc =array[i+2].split(',')
    lat1=float(loc[1])
    logt1=float(loc[0])
    src=""




    for f in os.listdir("/home/shameer/Desktop/Skylarks/software_dev/images"):
        if f.endswith(".JPG"):
            file_name=f
            path="/home/shameer/Desktop/Skylarks/software_dev/images/"+file_name
            img = Image.open(path)
            exif_data = get_exif_data(img)
            if "GPSInfo" in exif_data:
                gps_info = exif_data["GPSInfo"]

                gps_latitude = gps_info.get("GPSLatitude")
                gps_latitude_ref = gps_info.get('GPSLatitudeRef')
                gps_longitude = gps_info.get('GPSLongitude')
                gps_longitude_ref = gps_info.get('GPSLongitudeRef')

                if gps_latitude and gps_latitude_ref and gps_longitude and gps_longitude_ref:
                    lat = _convert_to_degress(gps_latitude)
                    if gps_latitude_ref != "N":
                        lat *= -1

                    lon = _convert_to_degress(gps_longitude)
                    if gps_longitude_ref != "E":
                        lon *= -1


                #print(file_name)
                if distance(lat1,logt1,lat,lon) <=35.00:
                    src=src+file_name+", "



    if(len(src)>0):
        print(time + ": " + src)
        data['Time'].append(time)
        data['Image'].append(src)



df = pd.DataFrame(data, columns = ['Time', 'Image'])
df.to_csv('/home/shameer/Desktop/example.csv')







